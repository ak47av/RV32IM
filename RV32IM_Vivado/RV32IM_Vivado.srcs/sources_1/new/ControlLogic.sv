`timescale 1ns / 1ps

// DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU ARE DOING
module ControlLogic #(parameter IN=10, parameter OUT=14) (
    input logic [31:0] ins,
    output logic [3:0] branchControl,
    output logic [4:0] aluControl,
    output logic [2:0] immSel,
    output logic regwen,
    output logic bsel
    );

    logic [IN-1:0] index;       // input to the logic
    logic [OUT-1:0] control;    // output of the logic

    // Decode instruction for these values
    logic bit30;
    logic bit25;
    logic [2:0]  funct3;
    logic [4:0]  opcode;

    assign bit30 = ins[30];
    assign bit25 = ins[25];
    assign funct3 = ins[14:12];
    assign opcode = ins[6:2];

    assign index = {bit30, bit25, funct3, opcode};

    always_comb begin
        case(index)
            10'b0000001100: control = 14'b00000000010000;
            10'b1000001100: control = 14'b00000100010000;
            10'b0011001100: control = 14'b00000011010000;
            10'b0011101100: control = 14'b00000011110000;
            10'b0000101100: control = 14'b00000000110000;
            10'b0010101100: control = 14'b00000010110000;
            10'b1010101100: control = 14'b00000110110000;
            10'b0001001100: control = 14'b00000001010000;
            10'b0001101100: control = 14'b00000001110000;
            10'b0010001100: control = 14'b00000010010000;
            10'b0100001100: control = 14'b00001111010000;
            10'b0100101100: control = 14'b00001111110000;
            10'b0101001100: control = 14'b00001100010000;
            10'b0101101100: control = 14'b00001100110000;
            10'b0110001100: control = 14'b00001001010000;
            10'b0110101100: control = 14'b00001001110000;
            10'b0111001100: control = 14'b00001010010000;
            10'b0111101100: control = 14'b00001010110000;
            10'b0000000100: control = 14'b00000000010001;
            10'b1100000100: control = 14'b00000000010001;
            10'b0100000100: control = 14'b00000000010001;
            10'b1000000100: control = 14'b00000000010001;
            10'b0010000100: control = 14'b00000010010001;
            10'b1110000100: control = 14'b00000010010001;
            10'b0110000100: control = 14'b00000010010001;
            10'b1010000100: control = 14'b00000010010001;
            10'b0011000100: control = 14'b00000011010001;
            10'b1111000100: control = 14'b00000011010001;
            10'b0111000100: control = 14'b00000011010001;
            10'b1011000100: control = 14'b00000011010001;
            10'b0011100100: control = 14'b00000011110001;
            10'b1111100100: control = 14'b00000011110001;
            10'b0111100100: control = 14'b00000011110001;
            10'b1011100100: control = 14'b00000011110001;
            10'b0000100100: control = 14'b00000000110001;
            10'b0010100100: control = 14'b00000010110001;
            10'b1010100100: control = 14'b00000110110001;
            10'b0001000100: control = 14'b00000001010001;
            10'b1101000100: control = 14'b00000001010001;
            10'b0101000100: control = 14'b00000001010001;
            10'b1001000100: control = 14'b00000001010001;
            10'b0001100100: control = 14'b00000001110001;
            10'b0101100100: control = 14'b00000001110001;
            10'b1001100100: control = 14'b00000001110001;
            10'b1101100100: control = 14'b00000001110001;
            10'b0000011000: control = 14'b00010101000100;
            10'b1000011000: control = 14'b00010101000100;
            10'b0100011000: control = 14'b00010101000100;
            10'b1100011000: control = 14'b00010101000100;
            10'b0000111000: control = 14'b00100100100100;
            10'b1000111000: control = 14'b00100100100100;
            10'b0100111000: control = 14'b00100100100100;
            10'b1100111000: control = 14'b00100100100100;
            10'b0010011000: control = 14'b00110001000100;
            10'b1010011000: control = 14'b00110001000100;
            10'b0110011000: control = 14'b00110001000100;
            10'b1110011000: control = 14'b00110001000100;
            10'b0010111000: control = 14'b01000101100100;
            10'b1010111000: control = 14'b01000101100100;
            10'b0110111000: control = 14'b01000101100100;
            10'b1110111000: control = 14'b01000101100100;
            10'b0011011000: control = 14'b01010001100100;
            10'b1011011000: control = 14'b01010001100100;
            10'b0111011000: control = 14'b01010001100100;
            10'b1111011000: control = 14'b01010001100100;
            10'b0011111000: control = 14'b01100110000100;
            10'b1011111000: control = 14'b01100110000100;
            10'b0111111000: control = 14'b01100110000100;
            10'b1111111000: control = 14'b01100110000100;
            10'b0000011001: control = 14'b10000000010000;
            10'b1000011001: control = 14'b10000000010000;
            10'b0100011001: control = 14'b10000000010000;
            10'b1100011001: control = 14'b10000000010000;
            10'b0000011011: control = 14'b10010000010110;
            10'b0100011011: control = 14'b10010000010110;
            10'b0000111011: control = 14'b10010000010110;
            10'b0100111011: control = 14'b10010000010110;
            10'b0001011011: control = 14'b10010000010110;
            10'b0101011011: control = 14'b10010000010110;
            10'b0001111011: control = 14'b10010000010110;
            10'b0101111011: control = 14'b10010000010110;
            10'b0010011011: control = 14'b10010000010110;
            10'b0110011011: control = 14'b10010000010110;
            10'b0010111011: control = 14'b10010000010110;
            10'b0110111011: control = 14'b10010000010110;
            10'b0011011011: control = 14'b10010000010110;
            10'b0111011011: control = 14'b10010000010110;
            10'b0011111011: control = 14'b10010000010110;
            10'b0111111011: control = 14'b10010000010110;
            10'b1000011011: control = 14'b10010000010110;
            10'b1100011011: control = 14'b10010000010110;
            10'b1000111011: control = 14'b10010000010110;
            10'b1100111011: control = 14'b10010000010110;
            10'b1001011011: control = 14'b10010000010110;
            10'b1101011011: control = 14'b10010000010110;
            10'b1001111011: control = 14'b10010000010110;
            10'b1101111011: control = 14'b10010000010110;
            10'b1010011011: control = 14'b10010000010110;
            10'b1110011011: control = 14'b10010000010110;
            10'b1010111011: control = 14'b10010000010110;
            10'b1110111011: control = 14'b10010000010110;
            10'b1011011011: control = 14'b10010000010110;
            10'b1111011011: control = 14'b10010000010110;
            10'b1011111011: control = 14'b10010000010110;
            10'b1111111011: control = 14'b10010000010110;
            default: control = 14'b00000000010001;
        endcase
    end

    assign {branchControl, aluControl, regwen, immSel, bsel} = control;

endmodule